import pygame
from plane_sprites import *
HERO_FIRE_EVENT = pygame.USEREVENT +1
pygame.init()
font = pygame.font.SysFont('anumgothic', 16)
text = font.render("得分：",True,(0,0,0))

class PlanGame(object):
    #初始化
    def __init__(self):
        print("游戏初始化")
        #创建窗口
        self.screen = pygame.display.set_mode(SCREEN_RECT.size)
        #self.screen.blit(text,(400,40,0),(10,10))
        #创建时钟对象
        self.clock = pygame.time.Clock()
        self.__create_sprite()

        pygame.time.set_timer( CREATE_ENEMY_EVENT,1000)
        pygame.time.set_timer(HERO_FIRE_EVENT,500)
        self.enemy_group = pygame.sprite.Group()
    #开始游戏
    def startGame(self):
        print("开始游戏")   
        while True:
            self.clock.tick(60)
            self.__event_handler()
            self.__check_collide()
            self.__update_sprites()
            pygame.display.update()
            


    #创建精灵或精灵组
    def __create_sprite(self):
        bg = background()
        bg1 = background(True)
        self.back_group = pygame.sprite.Group(bg,bg1)
        
        self.hero = Hero()
        self.hero_group = pygame.sprite.Group(self.hero)
        
        #self.bullets =  Bullet()
        #self.bullet_group = pygame.sprite.Group(self.bullets)



    #事件监听
    def __event_handler(self):
        keys_pressed = pygame.key.get_pressed()
        if keys_pressed[pygame.K_RIGHT]:
            self.hero.speed = 2
        elif keys_pressed[pygame.K_LEFT]:
            self.hero.speed = -2
        elif keys_pressed[pygame.K_UP]:
            self.hero.speend = -2
        elif keys_pressed[pygame.K_DOWN]:
            self.hero.speend = 2
        else:
            self.hero.speed = 0
 
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                PlanGame.__game_over(self)
            elif event.type == CREATE_ENEMY_EVENT:
                enemy = Enemy()
                self.enemy_group.add(enemy)
            elif event.type == HERO_FIRE_EVENT:
                self.hero.fire()

    #碰撞检测
    def __check_collide(self):
        pygame.sprite.groupcollide(self.hero.bullets,self.enemy_group,True,True)
        enemies = pygame.sprite.spritecollide(self.hero,self.enemy_group,True)
        if len(enemies) > 0:
            self.hero.kill()
            PlaneGame.__game_over()
    #更新精灵组
    def __update_sprites(self):
        self.back_group.update()
        self.back_group.draw(self.screen)

        self.enemy_group.update()
        self.enemy_group.draw(self.screen)

        self.hero_group.update()
        self.hero_group.draw(self.screen)
        
        self.hero.bullets.update()
        self.hero.bullets.draw(self.screen)
    def __game_over(self):
        print("游戏结束")   
        pygame.quit()
        exit()  

if __name__ == '__main__':
    plangame = PlanGame()
    plangame.startGame()
